<p class="small">Select an image to upload. Image must be a gif, jpg or png file.</p>

  <%= form_for @record, url: upload_path, method: :post, html:{class: 'edit_restaurant'} do |f| %>

  <div class="row">
    <div class="col-12">
      <div class="form-group row form-group-tight">
        <div class="col-sm-10">
          <label>Upload File</label>
          <%= f.file_field(upload_param, class: 'form-control form-control-sm image-upload') %>
          <input type="hidden" id="image_data" name="image_data">
          <input type="hidden" id="image_file_type" name="image_file_type">
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-12">
      <div class="btn-toolbar mt-3 mb-2" role="toolbar" aria-label="Toolbar with button groups">
        <button type="submit" class="btn btn-primary btn-sm mr-2" value="Upload">Upload</button>
      </div>
    </div>
  </div>

  <% end %>

<script type="text/javascript">
  $.fn.ImageResize = function (options) {  
      var defaults = {  
          maxWidth: 1920,  
          maxHeigt: 1080,  
          onImageResized: null  
      }  
      var settings = $.extend({}, defaults, options);  
      var selector = $(this);  
    
      selector.each(function (index) {  
          var control = selector.get(index);  
          if ($(control).prop("tagName").toLowerCase() == "input" && $(control).attr("type").toLowerCase() == "file") {  
              $(control).attr("accept", "image/*");  
              $(control).attr("multiple", "true");  
                
              control.addEventListener('change', handleFileSelect, false);  
          }  
          else {  
              cosole.log("Invalid file input field");  
          }  
      });  
    
      function handleFileSelect(event) {  
          //Check File API support  
          if (window.File && window.FileList && window.FileReader) {  
              var count = 0;  
              var files = event.target.files;  
              
              for (var i = 0; i < files.length; i++) {  
                  var file = files[i];                   
                  var file_type = file.type;
                  $("#image_file_type").val(file_type);
                  //Only pics  
                  if (!file.type.match('image')) continue;  
    
                  var picReader = new FileReader();  
                  picReader.addEventListener("load", function (event) {  
                      var picFile = event.target;  
                      var imageData = picFile.result;  
                      var img = new Image();  
                      img.src = imageData;  
                      img.onload = function () {  
                          imgSize = (file.size/1024);    
                          divider = null;                      
                          
                          if(imgSize < 500 && imgSize > 200){
                            divider = 0.4;
                          }
                          else if(imgSize > 500 && imgSize < 1000){
                            divider = 0.3;
                          }
                          else if(imgSize < 2000 && imgSize > 1000){
                            divider = 0.2;
                          }else if(imgSize > 2000 && imgSize < 8000){
                            divider = 0.1;
                          }else if(imgSize > 8000){
                            divider = 0.02;
                          }     
                          var canvas = $("<canvas/>").get(0);  
                          if(divider){ 
                            canvas.width = (img.naturalWidth * divider);  
                            canvas.height = (img.naturalHeight * divider);
                            var context = canvas.getContext('2d'); 
                            context.drawImage(img, 0, 0, (img.naturalWidth * divider), (img.naturalHeight * divider));  
                          }else{
                            canvas.width = (this.width);  
                            canvas.height = (this.height);
                            var context = canvas.getContext('2d'); 
                            context.drawImage(this, 0, 0);
                          }
                          imageData = canvas.toDataURL();  
                          if (settings.onImageResized != null && typeof (settings.onImageResized) == "function") {  
                              settings.onImageResized(imageData);
                          }  
    
                      }  
                      img.onerror = function (e) {  
                      }  
                  });  
                  //Read the image  
                  picReader.readAsDataURL(file);  
              }  
          } else {  
          }  
      }  
    
    
  }  
  $(document).ready(function () {  
       $(".image-upload").ImageResize(  
           {  
               maxWidth: 1920,  
               onImageResized: function (imageData) {  
                  $("#image_data").val(imageData);
                  $('.edit_restaurant').submit();
               }  
           });  
   }); 
</script>